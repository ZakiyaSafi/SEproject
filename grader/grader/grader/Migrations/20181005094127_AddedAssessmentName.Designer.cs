// <auto-generated />
using grader.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace grader.Migrations
{
    [DbContext(typeof(graderContext))]
    [Migration("20181005094127_AddedAssessmentName")]
    partial class AddedAssessmentName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("grader.Models.Assessment", b =>
                {
                    b.Property<int>("assessmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("assessmentName");

                    b.Property<int>("assessmentTotalMark");

                    b.Property<double>("assessmentWeighting");

                    b.Property<int>("courseID");

                    b.HasKey("assessmentID");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("grader.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("courseCode");

                    b.Property<int>("courseCoordinatorID");

                    b.Property<string>("courseName");

                    b.Property<int>("schoolAdministratorID");

                    b.HasKey("courseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("grader.Models.CourseCoordinator", b =>
                {
                    b.Property<int>("courseCoordinatorID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("courseCoordinatorNo");

                    b.Property<string>("courseCoordinatorPassword");

                    b.HasKey("courseCoordinatorID");

                    b.ToTable("CourseCoordinators");
                });

            modelBuilder.Entity("grader.Models.Mark", b =>
                {
                    b.Property<int>("markID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("assessmentID");

                    b.Property<double>("markAchieved");

                    b.Property<int>("studentID");

                    b.HasKey("markID");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("grader.Models.ReportQuery", b =>
                {
                    b.Property<int>("reportQueryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("reportQueryNature");

                    b.Property<string>("reportQueryReason");

                    b.Property<bool>("reportQueryValid");

                    b.Property<int>("studentID");

                    b.HasKey("reportQueryID");

                    b.ToTable("ReportQueries");
                });

            modelBuilder.Entity("grader.Models.SchoolAdministrator", b =>
                {
                    b.Property<int>("schoolAdministratorID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("schoolAdministratorNo");

                    b.Property<string>("schoolAdministratorPassword");

                    b.HasKey("schoolAdministratorID");

                    b.ToTable("SchoolAdministrators");
                });

            modelBuilder.Entity("grader.Models.Student", b =>
                {
                    b.Property<int>("studentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("studentNo");

                    b.Property<string>("studentPassword");

                    b.HasKey("studentID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("grader.Models.StudentCourse", b =>
                {
                    b.Property<int>("studentCourseID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("courseID");

                    b.Property<int>("studentID");

                    b.HasKey("studentCourseID");

                    b.ToTable("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
